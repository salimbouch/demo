name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Web App Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }}

      - name: Build and push Test Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.test
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:test-${{ github.sha }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.3'

      - name: Deploy to k3s
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBE_CONFIG" | base64 -d > kubeconfig
          kubectl --kubeconfig=./kubeconfig apply -f k8s/deployments/
          kubectl --kubeconfig=./kubeconfig apply -f k8s/services/
          kubectl --kubeconfig=./kubeconfig set image deployment/web-app web-app=${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }}
          
          # Update and apply the Selenium test job
          sed -i 's|${DOCKERHUB_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g' k8s/jobs/selenium-test-job.yaml
          sed -i 's|${IMAGE_TAG}|${{ github.sha }}|g' k8s/jobs/selenium-test-job.yaml
          kubectl --kubeconfig=./kubeconfig apply -f k8s/jobs/selenium-test-job.yaml

      - name: Run Selenium tests
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          kubectl --kubeconfig=./kubeconfig wait --for=condition=complete job/selenium-test --timeout=600s
          TEST_POD=$(kubectl --kubeconfig=./kubeconfig get pods --selector=job-name=selenium-test --output=jsonpath='{.items[*].metadata.name}')
          kubectl --kubeconfig=./kubeconfig logs $TEST_POD > test_results.log
          if grep -q "FAILED" test_results.log; then exit 1; fi

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test_results.log