name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven (skip tests)
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Web App Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ env.IMAGE_TAG }}

      - name: Build and push Test Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.test
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:test-${{ env.IMAGE_TAG }}

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Update Kubernetes deployment with new image
        run: |
          kubectl set image deployment/web-app web-app=${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ env.IMAGE_TAG }}
          kubectl rollout status deployment/web-app

      - name: Run Selenium Tests in Parallel
        run: |
          set -x  # Enable command echoing
          for browser in chrome firefox edge; do
            job_name="selenium-test-job-${browser}"
            kubectl delete job ${job_name} --ignore-not-found
          
            echo "Creating job for ${browser}:"
            sed -e "s|\${JOB_NAME}|${job_name}|g" \
                 -e "s|\${DOCKER_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g" \
                 -e "s|\${IMAGE_TAG}|${{ env.IMAGE_TAG }}|g" \
                 -e "s|\${BROWSER}|${browser}|g" \
                 k8s/jobs/selenium-test-job.yaml | \
            tee /dev/stderr | \
            kubectl create -f -
          done

          echo "All jobs created. Waiting for completion..."

          start_time=$(date +%s)
          completed_jobs=0
          failed_jobs=0

          while [ $completed_jobs -lt 3 ] && [ $(($(date +%s) - start_time)) -lt 300 ]; do
            for browser in chrome firefox edge; do
              job_name="selenium-test-job-${browser}"
              status=$(kubectl get job ${job_name} -o jsonpath='{.status.conditions[].type}' || echo "Pending")
              echo "Job ${job_name} status: ${status}"
          
              if [[ $status == "Complete" ]]; then
                ((completed_jobs++))
                echo "${browser} tests completed successfully"
                kubectl logs job/${job_name} > ${browser}-test-results.log
              elif [[ $status == "Failed" ]]; then
                ((failed_jobs++))
                ((completed_jobs++))
                echo "${browser} tests failed"
                kubectl logs job/${job_name} > ${browser}-test-results.log
              fi
            done

            if [ $completed_jobs -lt 3 ]; then
              echo "Waiting for jobs to complete. Completed: ${completed_jobs}, Failed: ${failed_jobs}"
              sleep 5
            fi
          done

          echo "Final status - Completed: ${completed_jobs}, Failed: ${failed_jobs}"

          if [ $completed_jobs -lt 3 ]; then
            echo "Tests timed out after 300 seconds"
            exit 1
          elif [ $failed_jobs -gt 0 ]; then
            echo "Some tests failed"
            exit 1
          else
            echo "All tests completed successfully"
          fi
          set +x  # Disable command echoing

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: '*-test-results.log'

      - name: Clean up test jobs
        if: always()
        run: |
          for browser in chrome firefox edge; do
            kubectl delete job selenium-test-job-${browser} --ignore-not-found
          done