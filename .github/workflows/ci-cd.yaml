name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Web App Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-latest

      - name: Build and push Test Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile.test
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:test-${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:test-latest

      - name: Setup SSH for VM access
        env:
          JUMP_HOST_SSH_PRIVATE_KEY: ${{ secrets.JUMP_HOST_SSH_PRIVATE_KEY }}
          VM_SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$JUMP_HOST_SSH_PRIVATE_KEY" > ~/.ssh/jump_host_key
          echo "$VM_SSH_PRIVATE_KEY" > ~/.ssh/vm_key
          chmod 600 ~/.ssh/jump_host_key ~/.ssh/vm_key
          cat >>~/.ssh/config <<EOF
          Host jumphost
            HostName ${{ secrets.JUMP_HOST }}
            User ${{ secrets.JUMP_USER }}
            IdentityFile ~/.ssh/jump_host_key
            StrictHostKeyChecking no
          Host targetvm
            HostName ${{ secrets.VM_HOST }}
            User ${{ secrets.VM_USER }}
            ProxyJump jumphost
            IdentityFile ~/.ssh/vm_key
            StrictHostKeyChecking no
          EOF

      - name: Update K8s manifests and trigger ArgoCD sync
        run: |
          ssh targetvm "kubectl set image deployment/web-app web-app=${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }}"
          ssh targetvm "cat > selenium-test-job.yaml << EOF
          $(cat k8s/jobs/selenium-test-job-template.yaml | sed 's/${DOCKERHUB_USERNAME}/${{ secrets.DOCKERHUB_USERNAME }}/g' | sed 's/${IMAGE_TAG}/${{ github.sha }}/g')
          EOF"
          ssh targetvm "kubectl apply -f selenium-test-job.yaml"
          ssh targetvm "argocd app sync ba-demo-app"
          ssh targetvm "argocd app wait ba-demo-app --health"
          ssh targetvm "kubectl wait --for=condition=complete job/selenium-test-job --timeout=600s"

      - name: Check test results
        run: |
          ssh targetvm "kubectl logs job/selenium-test-job" > test_results.log
          if grep -q "BUILD FAILURE" test_results.log; then
            echo "Tests failed. Check the logs for more details."
            exit 1
          else
            echo "Tests passed successfully!"
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test_results.log
        if: always()

      - name: Cleanup
        if: always()
        run: |
          ssh targetvm "kubectl delete job selenium-test-job"