name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: target/*.jar

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: target

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Web App Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }}

      - name: Build and push Test Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.test
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:test-${{ github.sha }}

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/web-app web-app=${{ secrets.DOCKERHUB_USERNAME }}/k8s-selenium:web-app-${{ github.sha }}
          kubectl rollout status deployment/web-app

  test:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Run Selenium Test
        run: |
          job_name="selenium-test-job-${{ matrix.browser }}"
          kubectl delete job ${job_name} --ignore-not-found
          
          sed -e "s|\${JOB_NAME}|${job_name}|g" \
              -e "s|\${DOCKER_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g" \
              -e "s|\${IMAGE_TAG}|${{ github.sha }}|g" \
              -e "s|\${BROWSER}|${{ matrix.browser }}|g" \
              k8s/jobs/selenium-test-job.yaml | \
          kubectl create -f -
          
          # Wait for job completion
          kubectl wait --for=condition=complete job/${job_name} --timeout=300s || \
          kubectl wait --for=condition=failed job/${job_name} --timeout=10s
          
          # Collect logs
          kubectl logs job/${job_name} > ${{ matrix.browser }}-test-results.log
          
          # Check job status
          if [ "$(kubectl get job ${job_name} -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}')" != "True" ]; then
            echo "${{ matrix.browser }} tests failed"
            exit 1
          fi
      - name: Upload test logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.browser }}-logs
          path: ${{ matrix.browser }}-test-results.log